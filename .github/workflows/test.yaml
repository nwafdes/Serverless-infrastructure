name: "Test-Lambda"

on: 
  workflow_dispatch: 
  # pull_request:
  #   branches: [main]

permissions: 
  id-token: write
  contents: read
env:
    "TABLE_NAME": ${{ secrets.TABLE_NAME }}
    "PARTITION_KEY": ${{ secrets.PARTITION_KEY }}
    "ITEM_NAME": ${{ secrets.ITEM_NAME }}
    "ATTRIBUTE": ${{ secrets.ATTRIBUTE }}

jobs:
  testing:
      runs-on: ubuntu-latest
      environment: testing
      steps:
          - name: "Checkout repo"
            uses: actions/checkout@v3
          
          - name: Set up Terraform
            uses: hashicorp/setup-terraform@v1
            with:
              terraform_version: '1.4.0'
            
          - name: "Setup Python"
            uses: actions/setup-python@v5
            with:
              python-version: '3.9'
          - name: "Get URL from Terraform"
            run: |
              terraform output -raw invoke_url
              echo "API_URL=$(terraform output -raw invoke_url)" >> $GITHUB_ENV
            
          - name: "Install requirements"
            working-directory: pytest
            run: pip install -r requirements.txt

          - name: "run pytest"
            working-directory: pytest/tests
            run: PYTHONPATH=.. pytest

          


  # deploying:
  #     runs-on: ubuntu-latest
  #     needs: testing
  #     steps:
  #         - name: "Checkout repo"
  #           uses: actions/checkout@v3
          
  #         - name: Set up Terraform
  #           uses: hashicorp/setup-terraform@v1
  #           with:
  #             terraform_version: '1.4.0'

  #         - name: "Configure AWS Creds"
  #           uses: aws-actions/configure-aws-credentials@v4.1.0
  #           with:
  #             aws-region: ${{ secrets.AWS_REGION }}
  #             role-to-assume: ${{ secrets.MAIN_OIDC_ROLE }}
  #             role-session-name: role2
          
  #         - name: "Zip lambda function"
  #           working-directory: pytest/app
  #           run: zip lambda_function_payload.zip lambda_function.py

  #         - name: "Terraform init"
  #           working-directory: Backend
  #           run: terraform init
          
  #         - name: "Apply plan"
  #           working-directory: Backend
  #           run: terraform plan

  #         - name: "Apply apply"
  #           working-directory: Backend
  #           run: terraform apply --auto-approve